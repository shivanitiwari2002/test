quarkus.banner.path=restapi_banner.txt
quarkus.live-reload.instrumentation=true
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.route.expose=true

quarkus.http.port=8088

#persistence
quarkus.datasource.db-kind = postgresql
#Need to start postgres, create a db called brixprod that is
#  owned by brixadmin with no password
#If the jbdc.url property is not defined then quarkus dev will generate
#  a container with postgres on a random port
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/brixdb
%dev.quarkus.datasource.username=brixadmin
#%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.database.generation=none

%test.quarkus.datasource.db-kind = h2
%test.quarkus.datasource.jdbc.url = jdbc:h2:mem:testdatabase
%test.quarkus.hibernate-orm.database.generation=drop-and-create

%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://cluster-sample-rw.brixdev:5432/brixdb
%prod.quarkus.datasource.username=app
%prod.quarkus.hibernate-orm.database.generation = none

#access control
quarkus.http.cors.enabled=true
%dev.quarkus.http.cors.origins=/.*/

#logging
quarkus.log.console.format=%d{YYYY-MM-dd HH:mm:ss:SSZ} %-6p%5t{id} %1.37X{BRIXTrxId} %c:%M:%L - %m%n
%dev.quarkus.log.category."com.ibm.brix".level=DEBUG
